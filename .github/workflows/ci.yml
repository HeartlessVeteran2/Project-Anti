name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Check for merge conflicts
        run: |
          if grep -r "<<<<<<< HEAD" . --exclude-dir=.git; then
            echo "::error::Merge conflict markers found"
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Android Lint
        run: ./gradlew lintDebug --stacktrace

      - name: Run Kotlin Lint (ktlint)
        run: |
          ./gradlew ktlintCheck --stacktrace || true

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports-${{ github.run_id }}
          path: |
            app/build/reports/lint-results*.html
            app/build/reports/lint-results*.xml
            app/build/reports/ktlint/
          retention-days: 30

      - name: Annotate lint issues
        if: always()
        uses: yutailang0119/action-android-lint@v4
        with:
          report-path: app/build/reports/lint-results-debug.xml
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace

      - name: Generate test coverage report
        run: ./gradlew jacocoTestReport --stacktrace

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-${{ github.run_id }}
          path: |
            app/build/reports/tests/
            app/build/reports/jacoco/jacocoTestReport/
            app/build/test-results/
          retention-days: 30

      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: app/build/test-results/**/*.xml
          check_name: "Unit Test Results"
          comment_mode: create new
          compare_to_earlier_commit: true

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Build release APK
        if: github.ref == 'refs/heads/main'
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-ci-${{ github.run_id }}
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

      - name: Upload release APK
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-ci-${{ github.run_id }}
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30

  dependency-check:
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          cache-read-only: true

      - name: Check for dependency updates
        run: |
          ./gradlew dependencyUpdates --stacktrace || true

      - name: Upload dependency reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports-${{ github.run_id }}
          path: build/dependencyUpdates/
          retention-days: 7

  status-check:
    runs-on: ubuntu-latest
    needs: [lint, test, build, dependency-check]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.test.result }}" == "failure" || "${{ needs.build.result }}" == "failure" ]]; then
            echo "::error::One or more critical jobs failed"
            exit 1
          fi
          echo "All jobs completed successfully or with acceptable results"